name: Build and tests our Eshop

on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master

jobs:
  # Install all dependencies
  Install:
    runs-on: ubuntu-latest

    steps:
      - name: Git Checkout
        uses: actions/checkout@v2.4.0
        with:
          token: ${{ secrets.WORKFLOW_TOKEN }}

      - name: Setup Node
        uses: actions/setup-node@v2.4.1
        with:
          node-version: 10

      - name: Cache node modules
        uses: actions/cache@v2
        with:
          path: node_modules
          key: node_modules-${{ hashFiles('**/package-lock.json') }}
          restore-keys: node_modules-

      - name: Install with npm
        run: |
          npm ci
  Build:
    needs: Install
    runs-on: ubuntu-latest

    steps:
      - name: Git Checkout
        uses: actions/checkout@v2.4.0
        with:
          token: ${{ secrets.WORKFLOW_TOKEN }}

      - name: Setup Node
        uses: actions/setup-node@v2.4.1
        with:
          node-version: 10
          
      - name: Cache node modules
        uses: actions/cache@v2
        with:
          path: node_modules
          key: node_modules-${{ hashFiles('**/package-lock.json') }}
      
      - name: build
        run: |
          npm rebuild node-sass --force
          npm run build -- --colors
      - name: Cache node modules and build folder
        if: ${{ github.ref == 'refs/heads/master' }}
        uses: actions/cache@v2
        with:
          path: |
            ~/.npm
            ./node_modules
            ./build
          key: ${{ runner.os }}-build-${{ github.run_id }}
          restore-keys: ${{ runner.os }}-build-${{ github.run_id }}

  Test:
    needs: Install
    runs-on: ubuntu-latest

    steps:
      - name: Git Checkout
        uses: actions/checkout@v2.4.0
        with:
          token: ${{ secrets.WORKFLOW_TOKEN }}

      - name: Setup Node
        uses: actions/setup-node@v2.4.1
        with:
          node-version: 10

      - name: Cache node modules
        uses: actions/cache@v2
        with:
          path: node_modules
          key: node_modules-${{ hashFiles('**/package-lock.json') }}
      
      - name: Run Unit Tests
        run: npm run test -- --colors
    
  Deploy:
    needs: [Build, Test]
    runs-on: ubuntu-latest
    if: ${{ github.ref == 'refs/heads/master' }}

    steps:
      - name: Git Checkout
        uses: actions/checkout@v2.4.0
        with:
          token: ${{ secrets.WORKFLOW_TOKEN }}

      - name: Load node modules and build folder
        uses: actions/cache@v2
        with:
          path: |
            ~/.npm
            ./node_modules
            ./build
          key: ${{ runner.os }}-build-${{ github.run_id }}

      - name: 
        run: pip3 install ansible
        run: pip3 install boto
        run: pip3 install boto3
        add_ssh_keys:
         fingerprints:
          - "fe:30:ee:fc:aa:6c:0e:12:b7:89:a7:92:37"
        run: echo $SECRET_KEY > test.pem
        run: chmod 400 test.pem
        run: echo $PASS_ANSIBLE > pass_ansible.txt
        run: ansible-playbook ansible/ec2_deploy.yml --user ubuntu --key-file test.pem --vault-pass-file pass_ansible.txt
        